type Query {
    departments(filter: [DepartmentFilter]) : [Department]
    employees(filter: [EmployeeFilter]) : [Employee]
    addresses: [Address],
    organizations: [Organization]
}

input DepartmentInput {
    name: String!
    organizationId: Int
}

type Department {
    id: ID
    name: String
    employees(filter: [EmployeeFilter]): [Employee],
    organizations: [Organization]
}

type Organization {
    id: ID
    name: String
    isActive: Boolean
    departments: [Department]
}

input DepartmentFilter {
    id: FilterField
    name: FilterField
}

input FilterField {
    operator: String!
    value: String!,
    queryOperator: String = "AND"
}

type Employee {
    id: ID!
    firstName: String!
    lastName: String!
    position: String!
    salary: Int
    age: Int
    departments: [Department],
    addresses: [Address]
}

input EmployeeFilter {
    id: FilterField
    firstName: FilterField
}

type Address {
    id: ID!
    isActive: Boolean
    street: String!
    employees: [Employee]
}