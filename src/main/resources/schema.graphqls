#type Query {
#    departments(filter: [DepartmentFilter]) : [Department]
#    employees(filter: [EmployeeFilter]) : [Employee]
#    addresses: [Address],
#    organizations: [Organization]
#}
#
#input DepartmentInput {
#    name: String!
#    organizationId: Int
#}
#
#type Department {
#    id: ID
#    name: String
#    employees(filter: [EmployeeFilter]): [Employee],
#    organizations: [Organization]
#}
#
#type Organization {
#    id: ID
#    name: String
#    isActive: Boolean
#    departments: [Department]
#}
#
#input DepartmentFilter {
#    id: IntFilterField
#    name: FilterField
#}
#
#enum IntFilters {
#    gt
#    ge
#    lt
#    le
#    eq
#}
#
#enum StringFilters {
#    eq
#    endsWith
#    startsWith
#    contains
#}
#input IntFilterField {
#    operator: IntFilters,
#    value: String!,
#    queryOperator: String = "AND"
#}
#
#input FilterField {
#    operator: StringFilters,
#    value: String!,
#    queryOperator: String = "AND"
#}
#
#type Employee {
#    id: ID!
#    firstName: String!
#    lastName: String!
#    position: String!
#    salary: Int
#    age: Int
#    departments: [Department],
#    addresses(filter: [AddressFilter]): [Address]
#}
#
#input EmployeeFilter {
#    id: FilterField
#    firstName: FilterField
#}
#
#input AddressFilter {
#    id: IntFilterField
#    street: FilterField
#}
#
#type Address {
#    id: ID!
#    isActive: Boolean
#    street: String!
#    employees: [Employee]
#}
#
#input OrganizationInput {
#    name: String!
#}
